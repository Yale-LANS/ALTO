/* the set of PIDs */
set TotalPID;

/* video rate */
param RATE;

/* P2P capacity efficiency */
param ETA;

/* the set of peer uploading capacities */
param UPLOAD { TotalPID }, >= 0;

/* the set of ISP free capacities */
param b { TotalPID }, >= 0;

/* the set of location CDN source */
param SOURCE { TotalPID }, >= 0;

/* the set of CDN cost */
param BETA { TotalPID }, >= 0;

/* the set of peer number in PIDs */
param CLIENTNUM { TotalPID }, >=0;

/* previously computed minimum CDN load */
param MINCDN;

/* weight of network cost optimization */
param RHO;

/* the set of cross-PID prices */
param PRICE { i in TotalPID, j in TotalPID }, >= 0;

/* PID CDN load */
var s { i in TotalPID }, >= 0;

/* PID-PID traffic */
var x { i in TotalPID, j in TotalPID }, >= 0;

/* PID-PID CDN traffic */
var xc { i in TotalPID, j in TotalPID }, >= 0;

/* PID-PID P2P traffic */
var xp { i in TotalPID, j in TotalPID }, >= 0;

/* P2P CDN traffic */
cdn_p2p { i in TotalPID, j in TotalPID }:
xc[i,j] + xp[i,j] = x[i,j];

/* CDN load constraints */
cdn_load:
sum { i in TotalPID } (BETA[i] * s[i]) <= MINCDN;

/* streaming supply-demand matching */
streaming_supply { i in TotalPID }:
sum { j in TotalPID} x[j,i] >= RATE * CLIENTNUM[i];

cdn_supply { i in TotalPID }:
sum { j in TotalPID} xc[j,i] >= RATE;

/* supply constraints */
supply_limit { i in TotalPID }:
sum { j in TotalPID } xp[i,j] <= ETA * UPLOAD[i];

cdn_limit { i in TotalPID }:
sum { j in TotalPID } xc[i,j] <= s[i] * SOURCE[i] + b[i];

/* total cost */
var cost;
cost_def:
cost = (sum { i in TotalPID } (BETA[i] * s[i])) + (RHO * sum { i in TotalPID, j in TotalPID } (x[i,j] * PRICE[i,j]));

/* objective */
minimize obj: cost;

end;

