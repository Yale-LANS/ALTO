/* the set of PIDs */
set TotalPID;

/* video rate */
param RATE;

/* P2P capacity efficiency */
param ETA;

/* the set of peer uploading capacities */
param UPLOAD { TotalPID }, >= 0;

/* the set of ISP free capacities */
param b { TotalPID }, >= 0;

/* the set of location CDN source */
param SOURCE { TotalPID }, >= 0;

/* the set of CDN cost */
param BETA { TotalPID }, >= 0;

/* the set of peer number in PIDs */
param CLIENTNUM { TotalPID }, >=0;

/* PID CDN server load */
var s { i in TotalPID }, >= 0;

/* PID-PID traffic */
var x { i in TotalPID, j in TotalPID }, >= 0;

/* PID-PID CDN traffic */
var xc { i in TotalPID, j in TotalPID }, >= 0;

/* PID-PID P2P traffic */
var xp { i in TotalPID, j in TotalPID }, >= 0;

/* P2P CDN traffic */
cdn_p2p { i in TotalPID, j in TotalPID }:
xc[i,j] + xp[i,j] = x[i,j];

/* streaming supply-demand matching */
streaming_supply { i in TotalPID }:
sum { j in TotalPID } x[j,i] >= RATE * CLIENTNUM[i];

cdn_supply { i in TotalPID }:
sum { j in TotalPID } xc[j,i] >= RATE;

/* supply constraints */
supply_limit { i in TotalPID }:
sum { j in TotalPID } xp[i,j] <= ETA * UPLOAD[i];

cdn_limit { i in TotalPID }:
sum { j in TotalPID } xc[i,j] <= s[i] * SOURCE[i] + b[i];

/* CDN input flow */
/* TODO? */

/* total CDN cost */
var cdn;
cdn_def:
cdn = sum { i in TotalPID } (BETA[i] * s[i]);

/* objective */
minimize obj: cdn;

end;

