P4P安装和使用手册
(C)Copyright Yale LANS 2009
===========================

目录
===========================

 - 简介
 - 作者信息
 - 版权和授权
 - 系统需求
   - P4P支持的平台
   - 硬件需求
   - 软件需求
 - P4P软件结构和组件
 - P4P软件编译和安装
   - 依赖的第三方软件包
     - Linux
     - Windows (MSVC)
   - 编译全部组件
   - 编译个别组件
 - 使用方法
   - P4P客户端（P2P应用程序）API
   - P2P应用程序Tracker服务器使用P4P信息
   - P4P Portal服务器

简介
===========================

    P4P协议是Internet服务提供商(ISP)与P2P应用程序之间的通信接口。接口定义简单直观。
    Yale LANS实验室负责开发和维护P4P接口，并且提供ISP和P2P两方的软件实现案例。
    ISP端的主要软件是P4P Portal服务器。P2P端的软件组件包括P4P客户端API（标准C++库和Java
库），用于访问P4P Portal服务；P2P应用程序优化引擎，帮助P2P应用程序使用ISP提供的P4P信息；以
及P4P标准库，定义了P4P信息的数据结构等。

作者信息
===========================

    完整的P4P作者信息在'AUTHORS'文件中。
    其他详情，请访问Yale LANS实验室主页:
     http://www-net.cs.yale.edu/

版权和授权
===========================

    本软件的使用授权遵循BSD license。 
    完整的授权信息在'LICENSE'文件中。

系统需求
===========================

P4P支持的平台
-------------------

    P4P软件的大多数组件，包括P2P应用程序端的组件兼容最新版本的Linux和Windows操作系统。
    ISP Portal服务器和P2P应用程序优化引擎目前仅兼容Linux操作系统。

硬件需求
-------------------

    P4P软件没有特别的硬件依赖性，大多数硬件只要满足软件需求（请参考下一节）都可以支持P4P。
     请注意，目前P4P软件仅在x86和x86_64硬件结构上开发和测试。
     如果您在其他硬件上成功的安装和使用P4P，或者遇到任何问题，请联系作者。

软件需求
-------------------

    P4P软件使用了以下第三方库：
    - Ant (用于编译Java版本的P4P组件)
        http://ant.apache.org/
    - Boost (1.46 或更高版本)
        http://www.boost.org/
    - libcurl 
        http://curl.haxx.se/
    - *CPlex (10.0 或更高版本) (用于P2P应用程序优化引擎)
        http://www.ilog.com/products/cplex/

     如果选择从源码编译P4P软件，请使用以下编译工具：
    - CMake (2.6 或更高版本)
        http://www.cmake.org/
    - 以下两种编译器任选:
      - GCC (4.0 或更高版本)
      - MSVC (6 或更高版本)

      如果您使用其他编译器成功的编译和安装P4P，或者需要任何问题，请联系作者。

P4P软件结构和组件
===========================

    P4P软件包包含以下主要组件。各组件的源码，支持平台，和相互依赖请见下表：

  - p4p-cmn
      描述: P4P标准库，定义P4P信息的数据结构等
      平台: 跨平台
      依赖: 无
      源码: /lib/p4pcmn/cpp

  - p4p-cmn-api
      描述: P4P API标准库
      平台: 跨平台
      依赖: p4p-cmn
      源码: /lib/p4pcmnapi/cpp

  - p4p-cmn-api-java
      描述: P4P API标准库(Java版本)
      平台: 跨平台
      依赖: 无
      源码: /lib/p4pcmnapi/java

  - p4p-cmn-srv
      描述: P4P服务器标准库
      平台: Linux
      依赖: p4p-cmn
      源码: /lib/p4pcmnsrv/cpp

  - p4p-portal-api
      描述: P4P Portal API库，包含P4P Portal服务(PID, pDistance)的访问
      平台: 跨平台
      依赖: p4p-cmn, p4p-cmn-api
      源码: /portal/api/cpp

  - p4p-portal-api-java
      描述: P4P Portal API库(Java版本)
      平台: 跨平台
      依赖: p4p-cmn-api-java
      源码: /portal/api/cpp

  - p4p-portal-server
      描述: P4P Portal服务器
      平台: Linux
      依赖: p4p-cmn, p4p-cmn-srv
      源码: /portal/server

  - p4p-portal-shell
      描述: P4P Portal服务配置shell
      平台: Linux
      依赖: p4p-cmn, p4p-cmn-api, p4p-portal-api
      源码: /portal/shell

  - p4p-aoe-api
      描述: P2P应用程序优化引擎API
      平台：跨平台
      依赖: p4p-cmn, p4p-cmn-api
      源码: /aoe/api/cpp

  - p4p-aoe-engine
      描述: P2P应用程序优化引擎核心部分
      平台: Linux
      依赖: p4p-cmn
      源码: /aoe/engine/cpp

  - p4p-aoe-server
      描述: P2P应用程序优化引擎服务器
      平台: Linux
      依赖: p4p-cmn, p4p-cmn-srv
      源码: /aoe/server

P4P软件编译和安装
===========================

本节介绍P4P各组件的编译和安装方法。
所有组件可以统一编译安装。各个组件也可以分别编译安装。

外部软件依赖
-------------------

  Linux
  -------------------

     请参照“软件需求”一节选择安装配套的第三方软件。请在标准软件包之外，安装"-dev"或者"-devel"
软件包。

  Windows (MSVC)
  -------------------

     请注意：本手册使用"C:\Program Files\"目录来指代应用程序所安装的目录，请根据实际情况加以
调整。比如，在64位硬件上，请指定"C:\Program Files (x86)\"为安装目录。

    1) 安装 Boost免费版本 (http://www.boostpro.com/products/free)。
         请选择1.35 或更高版本。请安装到缺省目录，即"C:\Program Files\boost\boost_x_xx\".

    2) 下载和编译 libcurl (http://curl.haxx.se/download.html)。
         请选择curl-x.x.x.zip文件。
       a) 解压缩该文件到"C:\Program Files\curl"，保证在"C:\Program Files\curl\lib"
             目录里"curllib.vcproj"文件被创建。
       b) 对系统设置做如下改动:
          - 打开 lib/Makefile.vc6, lib/Makefile.vc8, lib/Makefile.vc9
                如果可能，对变量值做如下改动：
              LIB_NAME = curl
              LIB_NAME_DEBUG = curld
              IMPLIB_NAME = curl
              IMPLIB_NAME_DEBUG = curld
                   在 WINLIBS 变量值中，将 wsock32.lib 替换为 ws2_32.lib
                   在 WINLIBS 变量值中，删除 bufferoverflowu.lib 
       c) 进入MSVC，在 curl\lib 目录中，运行
            nmake /f Makefile.vcx cfg=release-dll
             请选择合适的Makefile版本，如针对最新版本的MSVC，推荐使用Makefile.vc9
       d) 添加如下系统环境变量:
          CMAKE_INCLUDE_PATH = C:\Program Files\curl\include
          CMAKE_LIBRARY_PATH = C:\Program Files\curl\lib

编译全部组件
-------------------

    在源码的根目录，依次使用如下命令：

    mkdir build-temp
    cd build-temp
    cmake ..
    make
    sudo make install

    请注意，如果使用Windows MSVC编译器，请做相应调整如下：
      - 使用
          cmake -G "NMake Makefiles" ..
           替换:
          cmake ..
      - 使用 'nmake' 替换 'make'

编译个别组件
-------------------

   请参考“P4P软件结构和组件”一节，根据组件的相互依赖性，按顺序逐步编译和安装各个组件。
   请在相应组件的源码目录中，依次使用“编译全部组件”中的命令即可。

使用方法
===========================

P4P客户端（P2P应用程序）API
------------------------

    客户端API(包括 p4p-portal-api 和 p4p-aoe-api 组件)可以被P2P应用程序方便的使用，
以获取服务器端的服务。应用程序可以使用P4P Portal API从P4P Portal服务器请求P4P网络位
置信息(PID)和P4P网络距离信息(pDistance)。应用程序还可以选择使用P4P应用程序优化引擎API
从优化引擎服务器获取Peer匹配指导，包括PID之间的Peer匹配权重等。
  
    在本软件包中安装了一个简单示例程序的'p4pcli'，展示了客户端API的使用方法。该示例程序的
源码存放在 /examples/api/p4pcli。在程序源码中有详细的注释，解释各个API函数的使用方法和
使用顺序。

   p4pcli也可以用于软件开发之前的互联测试。下面给出一些具体的使用示例。ISP Internet2
/Abilene有一台正在运行的P4P Portal服务器 p4p-3.cs.yale.edu，服务端口号为6685；同时，
有一台正在针对Abilene网络信息进行Peer匹配优化的优化引擎服务器运行于p4p-4.cs.yale.edu，
服务端口号为6673。

    从Abilene Portal服务器获取PIDMap(PID与IP地址前缀之前的映射关系表):
       p4pcli --server=p4p-3.cs.yale.edu --port=6685 --operation=pidmap

    从Abilene Portal服务器获取P4P网络距离信息(PID之间的距离，pDistance矩阵):
       p4pcli --server=p4p-3.cs.yale.edu --port=6685 --operation=pdistance

    获取单独针对Abilene优化的Peer匹配指导:
       p4pcli --server=p4p-4.cs.yale.edu --port=6673 \
          --operation=guidance-generic \
          --guidance-portal=p4p-3.cs.yale.edu:6685 \
          < /examples/api/p4pcli/data/abilene-pids.txt

    获取同时针对Abilene和P2P覆盖网络优化的Peer匹配指导:
       p4pcli --server=p4p-4.cs.yale.edu --port=6673 \
          --operation=guidance-custom \
          --guidance-portal=p4p-3.cs.yale.edu:6685 \
          < /examples/api/p4pcli/data/abilene-swarm-state.txt

P2P应用程序Tracker服务器使用P4P信息
-------------------------------

   为了便于P2P应用程序可以方便的集成P4P功能，本软件包提供了一套P2P软件Tracker服务器使用P4P
API的组件。该组件中包含一个定义了主要数据结构的共享库源码包，它即可以单独编译并被Tracker服务
器动态链接，也可以直接加入到Tracker服务器本身的源码中。该源码包的开发遵循模块化和可扩展的原则，
方便各种不同P2P应用按照各自需求改进和集成P4P信息的使用算法。

   共享库源码包由以下几个组件组成：
    - p4p-tracker
        描述: 定义了Tracker使用P4P信息所需要的主要数据结构
        平台: 跨平台
        依赖: p4p-cmn, p4p-cmn-api, p4p-aoe-api
        源码: /lib/p4ptracker/cpp

   如前所述，共享库可以有两种使用方法。它们的具体使用示例可以参照:
    (a) 使用动态链接库，模块化集成进Tracker
           源码: /examples/tracker/integrated/
    (b) 直接加入Tracker服务器本身
           源码: /examples/tracker/indep/

   在程序源码中有详细的注释，解释系统结构和工作原理，各个数据结构的定义，以及各个API函数的使
用方法和使用顺序。

   这两个示例程序模拟Tracker的行为，允许从标准输入(键盘)读入P2P覆盖网络的信息以及Peer的
加入/离开行为。在启动Tracker的命令行中可以定义P4P Portal服务器以及优化引擎服务器，这样
Tracker可以动态的获取P4P信息以及优化引擎所给出的匹配指导。请看如下两个Tracker使用示例:

    p4ptracker_indep --portals=p4p-3.cs.yale.edu:6685 \
        --opt-engine=p4p-4.cs.yale.edu:6673 \
        < /examples/tracker/indep/data/events1.txt

    p4ptracker_integrated --portals=p4p-3.cs.yale.edu:6685 \
        --opt-engine=p4p-4.cs.yale.edu:6673 \
        < /examples/tracker/integrated/data/events1.txt

P4P Portal服务器
-------------------

   本软件包同时为ISP提供了一套手册，其中详细介绍了P4P Portal服务器的编译，安装，使用，
以及P4P服务的配置。这个手册被安装在'p4p_portal_docs'软件包的缺省安装目录中(不同的操作
系统平台有不同的缺省安装目录)。
  
   如果从源码直接编译，那么文档会被放置于'doc/portal'目录中，请参考文档
'doc/portal/config-manual/out/portal_config_manul.pdf'


